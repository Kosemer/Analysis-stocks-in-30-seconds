import React, { useState, useRef, useEffect } from "react";
import {
  View,
  Text,
  StyleSheet,
  ScrollView,
  Pressable,
  Animated,
} from "react-native";
import ResultCard from "./ResultCard";

// üîΩ Dinamikus magass√°g anim√°ci√≥val rendelkez≈ë komponens
const AnimatedExpandable = ({ expanded, children }) => {
  const animation = useRef(new Animated.Value(0)).current;
  const [contentHeight, setContentHeight] = useState(0);

  useEffect(() => {
    Animated.timing(animation, {
      toValue: expanded ? contentHeight : 0,
      duration: 300,
      useNativeDriver: false,
    }).start();
  }, [expanded, contentHeight]);

  return (
    <Animated.View style={{ height: animation, overflow: "hidden" }}>
      {/* L√°thatatlan, m√©rhet≈ë tartalom */}
      <View
        style={{ position: "absolute", top: 0, left: 0, right: 0, opacity: 0 }}
        onLayout={(e) => {
          if (contentHeight === 0) {
            setContentHeight(e.nativeEvent.layout.height);
          }
        }}
      >
        {children}
      </View>

      {/* L√°that√≥ tartalom */}
      <View pointerEvents={expanded ? "auto" : "none"}>{children}</View>
    </Animated.View>
  );
};

export default function StockAnalysis({ analysis }) {
  const [expandedCards, setExpandedCards] = useState({});

  const toggleCard = (key) => {
    setExpandedCards((prev) => ({
      ...prev,
      [key]: !prev[key],
    }));
  };

  return (
    <ScrollView contentContainerStyle={styles.scrollContainer}>
      <View style={styles.container}>
        {analysis.currentPrice && (
          <ResultCard currentPrice={analysis.currentPrice} fairValue={150.0} />
        )}
        <Text style={styles.title}>üìã Elemz√©s eredm√©nye</Text>

        {analysis.volume && (
          <Pressable onPress={() => toggleCard("volume")} style={styles.card}>
            <Text style={styles.subtitle}>üìä Volume (Forgalom)</Text>
            <Text style={styles.item}>
              Forgalom (napi): {analysis.volume?.value ?? analysis.volume}
              {"\n"}
              50 napos √°tlag:{" "}
              {typeof analysis.avgVolume50 === "number"
                ? (analysis.avgVolume50 / 1e6).toFixed(2) + "M darab"
                : "n.a."}
            </Text>

            <AnimatedExpandable expanded={expandedCards["volume"]}>
              <Text style={styles.expandedText}>
                Az adott r√©szv√©nyb≈ël h√°ny darabot adtak-vettek egy nap alatt.
                {"\n"} ‚û°Ô∏è Min√©l nagyobb, ann√°l akt√≠vabb a keresked√©s.
              </Text>
            </AnimatedExpandable>
          </Pressable>
        )}

        {/*K√âSZ, HELYES ADATOK*/}
        {analysis.revenueGrowthByYear && (
          <View style={styles.growthContainer}>
            <Pressable
              onPress={() => toggleCard("revenueGrowthByYear")}
              style={styles.card}
            >
              <Text style={styles.subtitle}>üìà √âves bev√©teln√∂veked√©sek:</Text>
              {analysis.revenueGrowthByYear.map((entry) => {
                const parsedGrowth = parseFloat(
                  entry.growthPercent.replace("%", "")
                );
                const passed = parsedGrowth > 10;
                return (
                  <Text key={entry.year} style={styles.item}>
                    {entry.year}: {entry.growthPercent}{" "}
                    {passed
                      ? "‚úÖ"
                      : "‚ùå\n‚ùóN√∂veked√©s hi√°nya\nEz azt jelzi, hogy a v√°llalat bev√©tele nem n≈ëtt megfelel≈ë √ºtemben, ami hosszabb t√°von gondot jelenthet."}
                  </Text>
                );
              })}

              <AnimatedExpandable
                expanded={expandedCards["revenueGrowthByYear"]}
              >
                <Text style={styles.expandedText}>
                  A c√©g bev√©tele (√°rbev√©tele) mennyivel n≈ëtt az el≈ëz≈ë √©vhez
                  k√©pest, sz√°zal√©kosan.
                  {"\n"}‚û°Ô∏è Jelzi, hogy n≈ë-e a c√©g √ºzlete.
                </Text>
              </AnimatedExpandable>
            </Pressable>
          </View>
        )}
        {/*K√âSZ, HELYES ADATOK*/}

        {/*K√âSZ, HELYES ADATOK*/}
        {(analysis.quickRatio ||
          analysis.roe5Y ||
          analysis.pegRatio ||
          analysis.peRatio) && (
          <View style={styles.metricsContainer}>
            {analysis.quickRatio !== undefined && (
              <Pressable
                onPress={() => toggleCard("quickRatio")}
                style={styles.card}
              >
                <Text style={styles.subtitle}>
                  ‚öñÔ∏è Quick ratio (Gyors likvidit√°si mutat√≥) Az elm√∫lt p√©nz√ºgyi
                  √©vre vet√≠tve
                </Text>
                <Text style={styles.item}>
                  {analysis.quickRatio?.value ?? analysis.quickRatio}{" "}
                  {analysis.quickRatio?.passed === true ? "‚úÖ" : "‚ùå"}
                </Text>

                <AnimatedExpandable expanded={expandedCards["quickRatio"]}>
                  <Text style={styles.expandedText}>
                    üìò{" "}
                    <Text style={{ fontWeight: "bold", fontSize: 16 }}>
                      Mit jelent ez a mutat√≥?{"\n"}
                    </Text>
                    {"\n"}A quick ratio azt mutatja meg, hogy a v√°llalat k√©pes-e
                    a legr√∂videbb id≈ën bel√ºl (pl. k√©szp√©nz, k√∂vetel√©sek) fedezni
                    r√∂vid t√°v√∫ tartoz√°sait, an√©lk√ºl hogy elad√≥sodna vagy eladn√°
                    a k√©szleteit. Az elm√∫lt p√©nz√ºgyi √©v teljes√≠tm√©ny√©t veszi
                    figyelembe.
                    {"\n\n"}‚ùó{" "}
                    <Text style={{ fontWeight: "bold", fontSize: 16 }}>
                      Aktu√°lis √©rt√©kel√©s:{"\n"}
                    </Text>
                    {"\n"}
                    {(() => {
                      const ratio =
                        analysis.quickRatio?.value ?? analysis.quickRatio;
                      if (ratio < 0.7) {
                        return `0,7 alatt ‚Äì ‚ùå Rossz: A v√°llalatnak nincs elegend≈ë likvid eszk√∂ze a r√∂vid t√°v√∫ k√∂telezetts√©geinek fedez√©s√©re.`;
                      } else if (ratio >= 0.7 && ratio < 1) {
                        return `0,7 √©s 1 k√∂z√∂tt ‚Äì ‚ö†Ô∏è Elfogadhat√≥, de nem t√∫l er≈ës likvidit√°s. √ârdemes figyelni a trendet.`;
                      } else if (ratio >= 2) {
                        return `2 felett ‚Äì ‚ùó T√∫l magas: Ez azt jelezheti, hogy a v√°llalat t√∫l sok k√©szp√©nzt vagy likvid eszk√∂zt tart fenn an√©lk√ºl, hogy azt hat√©konyan befektetn√©.`;
                      } else {
                        return `1 felett ‚Äì ‚úÖ J√≥: A v√°llalatnak elegend≈ë likvid eszk√∂ze van a r√∂vid lej√°rat√∫ k√∂telezetts√©geinek fedez√©s√©re.`;
                      }
                    })()}
                  </Text>
                </AnimatedExpandable>
              </Pressable>
            )}
            {/*K√âSZ, HELYES ADATOK*/}

            {/*K√âSZ, HELYES ADATOK*/}
            {analysis.quickRatioTTM !== undefined && (
              <Pressable
                onPress={() => toggleCard("quickRatioTTM")}
                style={styles.card}
              >
                <Text style={styles.subtitle}>
                  üìò Quick Ratio TTM {"\n"}(Gyors likvidit√°si mutat√≥ ‚Äì 12
                  h√≥napra vet√≠tve)
                </Text>
                <Text style={styles.item}>
                  {analysis.quickRatioTTM?.value ?? analysis.quickRatioTTM}{" "}
                  {analysis.quickRatioTTM?.passed === true ? "‚úÖ" : "‚ùå"}
                </Text>

                <AnimatedExpandable expanded={expandedCards["quickRatioTTM"]}>
                  <Text style={styles.expandedText}>
                    üìò{" "}
                    <Text style={{ fontWeight: "bold", fontSize: 16 }}>
                      Mit jelent ez a mutat√≥?{"\n"}
                    </Text>
                    {"\n"}A Quick Ratio TTM ugyanazt a mutat√≥t m√©ri, mint a
                    Quick Ratio, de az elm√∫lt 12 h√≥nap teljes√≠tm√©ny√©t veszi
                    figyelembe. Ez azt jelenti, hogy nem egy adott p√©nz√ºgyi √©v
                    vagy negyed√©v adatait haszn√°lja, hanem folyamatosan friss√ºl
                    az elm√∫lt 12 h√≥nap adatai alapj√°n.
                    {"\n\n"}‚ùó{" "}
                    <Text style={{ fontWeight: "bold", fontSize: 16 }}>
                      Aktu√°lis √©rt√©kel√©s:{"\n"}
                    </Text>
                    {"\n"}
                    {(() => {
                      const ratio =
                        analysis.quickRatioTTM?.value ?? analysis.quickRatioTTM;
                      if (ratio < 0.7) {
                        return `0,7 alatt ‚Äì ‚ùå Rossz: A v√°llalatnak nincs elegend≈ë likvid eszk√∂ze a r√∂vid t√°v√∫ k√∂telezetts√©geinek fedez√©s√©re.`;
                      } else if (ratio >= 0.7 && ratio < 1) {
                        return `0,7 √©s 1 k√∂z√∂tt ‚Äì ‚ö†Ô∏è Elfogadhat√≥, de nem t√∫l er≈ës likvidit√°s. √ârdemes figyelni a trendet.`;
                      } else if (ratio >= 2) {
                        return `2 felett ‚Äì ‚ùó T√∫l magas: Ez azt jelezheti, hogy a v√°llalat t√∫l sok k√©szp√©nzt vagy likvid eszk√∂zt tart fenn an√©lk√ºl, hogy azt hat√©konyan befektetn√©.`;
                      } else {
                        return `1 felett ‚Äì ‚úÖ J√≥: A v√°llalatnak elegend≈ë likvid eszk√∂ze van a r√∂vid lej√°rat√∫ k√∂telezetts√©geinek fedez√©s√©re.`;
                      }
                    })()}
                  </Text>
                </AnimatedExpandable>
              </Pressable>
            )}
            {/*K√âSZ, HELYES ADATOK*/}

            {/*K√âSZ, HELYES ADATOK*/}
            {analysis.currentRatio !== undefined && (
              <Pressable
                onPress={() => toggleCard("currentRatio")}
                style={styles.card}
              >
                <Text style={styles.subtitle}>
                  üíº Current Ratio {"\n"}(R√∂vid t√°v√∫ likvidit√°si mutat√≥)
                </Text>
                <Text style={styles.item}>
                  {analysis.currentRatio?.value ?? analysis.currentRatio}{" "}
                  {analysis.currentRatio?.passed === true ? "‚úÖ" : "‚ùå"}
                </Text>

                <AnimatedExpandable expanded={expandedCards["currentRatio"]}>
                  <Text style={styles.expandedText}>
                    üìò{" "}
                    <Text style={{ fontWeight: "bold", fontSize: 16 }}>
                      Mit jelent ez a mutat√≥?{"\n"}
                    </Text>
                    {"\n"}A current ratio azt mutatja meg, hogy a v√°llalat
                    k√©pes-e r√∂vid lej√°rat√∫ tartoz√°sait fedezni forg√≥eszk√∂zeivel.
                    √Åltal√°noss√°gban: min√©l nagyobb az √©rt√©k 1 felett, ann√°l
                    stabilabb a c√©g likvidit√°sa.
                    {"\n\n"}‚ùó{" "}
                    <Text style={{ fontWeight: "bold", fontSize: 16 }}>
                      Aktu√°lis √©rt√©kel√©s:{"\n"}
                    </Text>
                    {"\n"}
                    {(() => {
                      const ratio =
                        analysis.currentRatio?.value ?? analysis.currentRatio;
                      if (ratio < 1) {
                        return `Ha a current ratio √©rt√©ke kevesebb mint 1, az azt jelzi, hogy a v√°llalatnak t√∂bb r√∂vid lej√°rat√∫ k√∂telezetts√©ge van, mint forg√≥eszk√∂ze. Ez p√©nz√ºgyi neh√©zs√©gekre utalhat, √©s azt jelentheti, hogy a c√©gnek probl√©m√°i lehetnek a r√∂vid t√°v√∫ k√∂telezetts√©gek teljes√≠t√©s√©vel.`;
                      } else if (ratio >= 1 && ratio < 1.3) {
                        return `Ez az √©rt√©k √°ltal√°ban elfogadhat√≥nak tekinthet≈ë, mivel a v√°llalatnak elegend≈ë forg√≥eszk√∂ze van a r√∂vid lej√°rat√∫ k√∂telezetts√©gek fedez√©s√©re.`;
                      } else if (ratio >= 2) {
                        return `Ha a current ratio t√∫l magas, p√©ld√°ul 2 vagy ann√°l nagyobb, az azt jelezheti, hogy a v√°llalat nem haszn√°lja hat√©konyan az eszk√∂zeit, √©s t√∫l sok k√©szp√©nzt vagy k√©szletet tart fenn an√©lk√ºl, hogy azt befektetn√© vagy felhaszn√°ln√°.`;
                      } else {
                        return `A current ratio 1.3 √©s 2 k√∂z√∂tt van ‚Äì ez √°ltal√°ban pozit√≠v jel, de √©rdemes √∂sszevetni ipar√°gi √°tlagokkal is.`;
                      }
                    })()}
                  </Text>
                </AnimatedExpandable>
              </Pressable>
            )}
            {/*K√âSZ, HELYES ADATOK*/}

            {analysis.roe5Y !== undefined && (
              <Pressable
                onPress={() => toggleCard("roe5Y")}
                style={styles.card}
              >
                <Text style={styles.subtitle}>üí∞ ROE (5 √©v)</Text>
                <Text style={styles.item}>
                  {analysis.roe5Y?.value ?? analysis.roe5Y}{" "}
                  {analysis.roe5Y?.passed === true
                    ? "‚úÖ"
                    : analysis.roe5Y?.passed === false
                    ? "‚ùå\n‚ùóGyenge j√∂vedelmez≈ës√©g\nA gyenge j√∂vedelmez≈ës√©g arra utal, hogy a c√©g m≈±k√∂d√©se nem el√©g nyeres√©ges, √≠gy nem biztos, hogy j√≥ befektet√©s hossz√∫ t√°von."
                    : ""}
                </Text>
                <AnimatedExpandable expanded={expandedCards["roe5Y"]}>
                  <Text style={styles.expandedText}>
                    c√©g mennyi nyeres√©get termel a r√©szv√©nyesek p√©nz√©hez k√©pest.
                    {"\n"}‚û°Ô∏è Min√©l magasabb, ann√°l hat√©konyabban dolgozik a c√©g
                    a befektet≈ëk p√©nz√©vel.
                  </Text>
                </AnimatedExpandable>
              </Pressable>
            )}
            

            {analysis.pegRatio !== undefined && (
              <Pressable
                onPress={() => toggleCard("pegRatio")}
                style={styles.card}
              >
                <Text style={styles.subtitle}>üìâ PEG Ratio</Text>
                <Text style={styles.item}>
                  {analysis.pegRatio?.value ?? analysis.pegRatio}{" "}
                  {analysis.pegRatio?.passed === true
                    ? "‚úÖ"
                    : analysis.pegRatio?.passed === false
                    ? "‚ùå\n‚ùóAlacsony nyeres√©gn√∂veked√©s\nA c√©g profitja lassan vagy alig n≈ë √©vr≈ël √©vre.\nEz a mutat√≥ ink√°bb csak t√°j√©koztat√≥ jelleg≈±, nem lehet teljesen pontosat sz√°molni‚ùó"
                    : ""}
                </Text>
                <AnimatedExpandable expanded={expandedCards["pegRatio"]}>
                  <Text style={styles.expandedText}>
                    Azt mutatja meg, hogy a c√©g P/E ar√°nya (√°ra a nyeres√©g√©hez
                    k√©pest) mennyire indokolt a v√°rhat√≥ n√∂veked√©s alapj√°n.
                    {"\n"}‚û°Ô∏è 1 k√∂r√ºl j√≥, ha 1-n√©l kisebb, akkor olcs√≥nak sz√°m√≠t
                    a r√©szv√©ny.
                  </Text>
                </AnimatedExpandable>
              </Pressable>
            )}

            {analysis.peRatio !== undefined && (
              <Pressable
                onPress={() => toggleCard("peRatio")}
                style={styles.card}
              >
                <Text style={styles.subtitle}>üìä P/E Ratio</Text>
                <Text style={styles.item}>
                  {analysis.peRatio?.value ?? analysis.peRatio}{" "}
                  {analysis.peRatio?.passed === true
                    ? "‚úÖ"
                    : analysis.peRatio?.passed === false
                    ? "‚ùå\n‚ùóVal√≥sz√≠n≈±leg t√∫l√©rt√©kelt\nA r√©szv√©ny √°ra magasabb, mint amit a c√©g teljes√≠tm√©nye indokol."
                    : ""}
                </Text>
                <AnimatedExpandable expanded={expandedCards["peRatio"]}>
                  <Text style={styles.expandedText}>
                    Price to Earnings ‚Äì √År/nyeres√©g ar√°ny{"\n"}A r√©szv√©ny √°ra
                    h√°nyszoros√°t √©ri a c√©g egy r√©szv√©nyre jut√≥ √©ves
                    nyeres√©g√©nek.
                    {"\n"}‚û°Ô∏è Magas: dr√°ga, alacsony: olcs√≥bb ‚Äì de f√ºgg a
                    n√∂veked√©si kil√°t√°sokt√≥l is.
                  </Text>
                </AnimatedExpandable>
              </Pressable>
            )}
          </View>
        )}
      </View>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  scrollContainer: {
    paddingBottom: 20,
  },
  container: {
    marginTop: 20,
    padding: 10,
    backgroundColor: "#f2f2f2",
    borderRadius: 10,
  },
  title: {
    fontWeight: "bold",
    fontSize: 18,
    marginBottom: 10,
    textAlign: "center",
  },
  subtitle: {
    fontWeight: "bold",
    marginTop: 10,
    fontSize: 16,
    textAlign: "center",
  },
  item: {
    fontSize: 16,
    marginBottom: 6,
    textAlign: "center",
  },
  growthContainer: {
    marginTop: 10,
  },
  metricsContainer: {
    marginTop: 10,
  },
  card: {
    backgroundColor: "#ffffff",
    padding: 10,
    borderRadius: 8,
    marginBottom: 10,
    shadowColor: "#000",
    shadowOpacity: 0.05,
    shadowOffset: { width: 0, height: 2 },
    shadowRadius: 4,
    elevation: 1,
  },
  expandedText: {
    marginTop: 10,
    fontSize: 15,
    color: "#555",
    textAlign: "center",
  },
});
