import React from "react";
import { View, Text, Pressable } from "react-native";
import AnimatedExpandable from "./AnimatedExpandable";

export default function QuickRatioCard({ data, isExpanded, onToggle, styles }) {

  // 1. Az adatstrukt√∫ra friss√≠t√©se: k√ºl√∂nv√°lasztjuk az ikont √©s a sz√∂veget
  const explanationData = [
    {
      range: "0,7 alatt",
      icon: "‚ùå",
      statusLabel: "Rossz",
      style: styles.redText,
      description: "A v√°llalatnak nincs elegend≈ë likvid eszk√∂ze a r√∂vid t√°v√∫ k√∂telezetts√©geinek fedez√©s√©re.",
    },
    {
      range: "0,7 √©s 1 k√∂z√∂tt",
      icon: "‚ö†Ô∏è",
      statusLabel: "Elfogadhat√≥",
      style: styles.orangeText,
      description: "A likvidit√°s nem t√∫l er≈ës, √©rdemes figyelni a trendet.",
    },
    {
      range: "1 felett",
      icon: "‚úÖ",
      statusLabel: "J√≥",
      style: styles.greenText,
      description: "A v√°llalatnak elegend≈ë likvid eszk√∂ze van a r√∂vid lej√°rat√∫ k√∂telezetts√©geinek fedez√©s√©re.",
    },
    {
      range: "2 felett",
      icon: "‚ùó",
      statusLabel: "T√∫l magas",
      style: styles.warningText,
      description: "A v√°llalat t√∫l sok k√©szp√©nzt tart an√©lk√ºl, hogy azt hat√©konyan befektetn√©.",
    },
  ];

  return (
    <Pressable onPress={onToggle} style={styles.card}>
      {/* ... a k√°rtya fels≈ë r√©sze v√°ltozatlan ... */}
      <Text style={styles.subtitle}>
        ‚öñÔ∏è Quick ratio (Gyors likvidit√°si mutat√≥) Az elm√∫lt p√©nz√ºgyi √©vre vet√≠tve
      </Text>
      <Text
        style={[
          styles.item,
          data?.passed === true ? styles.greenText : styles.redText,
        ]}
      >
        {data?.value ?? data} {data?.passed === true ? "‚úÖ" : "‚ùå"}
      </Text>
      
      <AnimatedExpandable expanded={isExpanded}>
        <View>
            <Text style={styles.expandedText}>
              üìò <Text style={{ fontWeight: "bold" }}>Mit jelent ez a mutat√≥?</Text>
              {"\n"}A quick ratio azt mutatja meg, hogy a v√°llalat k√©pes-e a legr√∂videbb id≈ën bel√ºl (pl. k√©szp√©nz, k√∂vetel√©sek) fedezni r√∂vid t√°v√∫ tartoz√°sait, an√©lk√ºl hogy elad√≥sodna vagy eladn√° a k√©szleteit. Az elm√∫lt p√©nz√ºgyi √©v teljes√≠tm√©ny√©t veszi figyelembe.
            </Text>

            <Text style={styles.explanationTitle}>‚ùó Mit jelent az √©rt√©ke?</Text>

            <View style={styles.explanationTable}>
                {explanationData.map((row, index) => (
                    <View 
                        key={index} 
                        style={[styles.explanationRow, index === explanationData.length - 1 && { borderBottomWidth: 0 }]}
                    >
                        <Text style={[styles.explanationCell, styles.rangeCell]}>{row.range}</Text>
                        
                        {/* === ITT T√ñRT√âNT A V√ÅLTOZ√ÅS === */}
                        {/* A status cella most egy View, ami k√©t Text elemet tartalmaz */}
                        <View style={[styles.explanationCell, styles.statusCell]}>
                            <Text style={styles.statusIcon}>{row.icon}</Text>
                            <Text style={[styles.statusLabelText, row.style]}>{row.statusLabel}</Text>
                        </View>
                        
                        <Text style={[styles.explanationCell, styles.descriptionCell]}>{row.description}</Text>
                    </View>
                ))}
            </View>
        </View>
      </AnimatedExpandable>
    </Pressable>
  );
}